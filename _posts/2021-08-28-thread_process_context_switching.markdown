---
layout: post
title:  "Process Context Switching vs Thread Context Switching"
date:   2021-08-28
categories: ComputerScience
---

**프로세스**는 쉽게 말하면 현재 실행 중인 프로그램을 말한다. 이 프로세스는 **스택, 힙, 데이터, 코드 영역의 데이터들을 메모리에 가지고 있다.**               

반면 **쓰레드**는 프로세스 내의 여러 흐름들로 **각각의 쓰레드들은 힙, 데이터, 코드 영역은 공유를 하지만 스택 영역은 각 스레드마다 각자 따로 관리**한다.         
            
----------------                
               
프로세스 컨테스트 스위칭은 쓰레드 컨테스트 스위칭에 비해 비용이 매우 크다.       
하나 하나 살펴보자.       

우선 **쓰레드 컨테스트 스위칭은 가상 메모리 공간을 유지**한다. 당연하다 쓰레드는 하나의 프로그램 내의 여러 흐름으로 그 프로그램의 가상 메모리 공간을 유지하는 것은 당연하다.      

반면 **프로세스 컨테스트 스위칭**은 당연히도 **프로그램간 가상 메모리 공간이 다르기 때문**에 **캐시의 데이터들도 완전히 교체**되어야하고, **가상 메모리 공간이 바뀌었기 때문**에 물리적 메모리와 논리적 메모리 주소 공간의 매핑 관계에 대한 캐시인 **TLB도 다 날라가기(flush) 때문에 프로세스 컨테스트 스위칭 후 한 동안은 가상 메모리 주소의 물리적 메모리 주소로의 매핑이 느려진다.**      

**쓰레드 컨테스트 스위칭**은 **프로그램 카운터 ( PC ) ( 스택 영역이 다르기 때문에 당연 ), 스택 포인터 ( 스택 영역이 다르기 때문에 당연 ) 등의 레지스터의 데이터들만 교체**해주기 떄문에 컨테스트 스위칭 비용이 싸다.        

반면 **프로세스 컨테스트 스위칭**은 메모리 공간, 페이지 테이블, 커널 자원, 캐시, 레지스터 등등 여러 자원들이 교체가 되어 상대적으로 쓰레드 컨테스트 스위칭에 비해 비싸다.           

references : [https://hoony-gunputer.tistory.com/entry/Thread-Context-Switching-vs-Process-Context-Switching](https://hoony-gunputer.tistory.com/entry/Thread-Context-Switching-vs-Process-Context-Switching)     