---
layout: post
title:  "왜 Fragment Shader에서의 discard는 안좋을까?"
date:   2021-08-31
tags: [ComputerGraphics]
---

discard는 Fragment Shader 단계에서 해당 픽셀을 그리지 않는다는 의미이다.      
이것이 왜 문제가 될까?     

일반적으로 opaque ( 불투명 )한 오브젝트를 그릴 때는 Rasterizer 단계 후 Fragment Shader 전 Early Depth Test라는 것을 통해서 삼각형 내의 각각의 Fragment가 그려질지 안그려질지를 일찍 결정할 수 있다. ( 어떤 Fragment가 안그려질 것이라면 Fragment Shading을 할 필요가 없다. )                   
Rasterizer 단계가 끝나면 당연히 삼각형의 3개의 Vertex의 depth 값을 가지고 interpolation을 통해서 각 Fragment들의 Depth 값을 알 수 있다.          

여기서 Early Depth Test는 Depth Buffer와 비교하여 각 Fragment의 Depth가 Depth Buffer의 Depth와 비교하여 Depth Test를 통과하지 못했을 시 해당 Fragment를 그냥 Fragment Shader 단계로 넘기지 않는다. ( 일반적인 Depth Test는 Fragment Shading이 끝난 후 수행된다. )                                     
원래는 Fragment Shading 후 수행하는 Depth Test를 Fragment Shading 전에 수행하니 Depth Test를 통과하지 못하는 Fragment들에 대해서는 Fragment Shading을 안할 수 있고 여기서 오는 성능 향상이 상당하다.           

문제는 Fragment Shader에서 discard를 사용하면 이후 Early Depth Test를 할 수 없다는 것이다.    
이유는 당연하다.                  
**Fragmentment Shader에 discard문이 있다면 어떤 Fragment가 Fragment Shading 단계에서 버려질지 ( Discard ) 그려질지를 알 수 없어지기 때문에 Fragment Shading 단계 전 Early Depth Test 단계에서 Depth Buffer에 Depth 값을 그리면 안된다.**      
**버려질 Fragment에 대해** Depth Test를 수행하고 Depth Test를 통과하여 **Depth Buffer에 Depth 값을 그리면 안되기 때문**이다. ( 버려질 Fragment가 Depth Test를 통과하여 Depth Buffer에 Depth 값을 쓰면 안된다. )                           
discard 외에도 **Fragment Shader에서 임의로 해당 Fragment의 Depth를 바꾸는 코드**를 넣거나, **alpha test를 수행**하는 경우에도 Early Depth Test는 수행되지 않는다.            

또한 Fragment Shading 과정에서 특정 Fragment를 버린다고 거기서 GPU가 바로 다른 일을 하는 것이 아니다.       
GPU는 Warp 단위로 여러 ( 32, 64개 ) 스레드 ( 여기서는 Fragment 각각 )들을 모아서 동시에 어떤 하나의 명령어를 수행하는데 어느 하나의 Fragment를 버린다하더라도 GPU는 Warp 단위로 함께 동작하기 때문에 같은 Warp에 속해 있던 Fragment들이 Shading 작업을 다 끝낼 때 까지 기다려야한다. ( [참고](https://sungjjinkang.github.io/shader_if) )             
